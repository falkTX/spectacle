name: build

on:
  push:
    branches:
      - '*'
    tags:
      - '[0-9]*'
      - 'v[0-9]*'
  pull_request:
    branches:
      - '*'

jobs:
  build_for_linux:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up dependencies
      run: |
        sudo apt-get update && \
        sudo apt-get install \
          build-essential \
          libfftw3-dev \
          libjack-jackd2-dev \
          libgl-dev \
          libx11-dev
    - name: Build all
      shell: bash
      run: make -j $(nproc)

  build_for_win32:
    runs-on: ubuntu-18.04
    container:
      image: archlinux
    steps:
    - name: Set install name
      run: |
        echo "install_ref=${GITHUB_REF##*/}" >> "$GITHUB_ENV"
        echo "install_name=spectacle-analyzer-${GITHUB_REF##*/}-win32" >> "$GITHUB_ENV"
    - name: Configure pacman repositories
      shell: bash
      run: |
        cat >>/etc/pacman.conf <<EOF
        [multilib]
        Include = /etc/pacman.d/mirrorlist
        [mingw-w64]
        SigLevel = Optional TrustAll
        Server = https://github.com/jpcima/arch-mingw-w64/releases/download/repo.\$arch/
        EOF
    - name: Set up dependencies
      shell: bash
      run: |
        pacman -Sqyu --noconfirm
        pacman -Sq --needed --noconfirm \
          base-devel \
          git \
          wine \
          mingw-w64-gcc \
          mingw-w64-pkg-config \
          mingw-w64-fftw
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Build
      shell: bash
      run: |
        export AR=i686-w64-mingw32-ar
        export RANLIB=i686-w64-mingw32-ranlib
        export CC=i686-w64-mingw32-gcc
        export CXX=i686-w64-mingw32-g++
        export STRIP=i686-w64-mingw32-strip
        export WINDRES=i686-w64-mingw32-windres
        export PKG_CONFIG=i686-w64-mingw32-pkg-config

        export PKG_CONFIG="$PKG_CONFIG --static"

        export WINEPREFIX=~/my-wine-prefix
        mkdir -p "$WINEPREFIX"

        CROSS_COMPILING=true EXE_WRAPPER=wine WINDOWS=true make -j $(nproc)
    - name: Install
      shell: bash
      run: |
        mv -f bin "${{env.install_name}}"
        zip -r "${{env.install_name}}.zip" "${{env.install_name}}"
    - uses: actions/upload-artifact@v2
      with:
        name: Windows 32-bit binaries
        path: ${{env.install_name}}.zip

  build_for_win64:
    runs-on: ubuntu-18.04
    container:
      image: archlinux
    steps:
    - name: Set install name
      run: |
        echo "install_ref=${GITHUB_REF##*/}" >> "$GITHUB_ENV"
        echo "install_name=spectacle-analyzer-${GITHUB_REF##*/}-win64" >> "$GITHUB_ENV"
    - name: Configure pacman repositories
      shell: bash
      run: |
        cat >>/etc/pacman.conf <<EOF
        [multilib]
        Include = /etc/pacman.d/mirrorlist
        [mingw-w64]
        SigLevel = Optional TrustAll
        Server = https://github.com/jpcima/arch-mingw-w64/releases/download/repo.\$arch/
        EOF
    - name: Set up dependencies
      shell: bash
      run: |
        pacman -Sqyu --noconfirm
        pacman -Sq --needed --noconfirm \
          base-devel \
          git \
          wine \
          mingw-w64-gcc \
          mingw-w64-pkg-config \
          mingw-w64-fftw
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Build
      shell: bash
      run: |
        export AR=x86_64-w64-mingw32-ar
        export RANLIB=x86_64-w64-mingw32-ranlib
        export CC=x86_64-w64-mingw32-gcc
        export CXX=x86_64-w64-mingw32-g++
        export STRIP=x86_64-w64-mingw32-strip
        export WINDRES=x86_64-w64-mingw32-windres
        export PKG_CONFIG=x86_64-w64-mingw32-pkg-config

        export PKG_CONFIG="$PKG_CONFIG --static"

        export WINEPREFIX=~/my-wine-prefix
        mkdir -p "$WINEPREFIX"

        CROSS_COMPILING=true EXE_WRAPPER=wine WINDOWS=true make -j $(nproc)
    - name: Install
      shell: bash
      run: |
        mv -f bin "${{env.install_name}}"
        zip -r "${{env.install_name}}.zip" "${{env.install_name}}"
    - uses: actions/upload-artifact@v2
      with:
        name: Windows 64-bit binaries
        path: ${{env.install_name}}.zip

  archive_source_code:
    runs-on: ubuntu-18.04
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Set install name
      run: |
        echo "install_ref=${GITHUB_REF##*/}" >> "$GITHUB_ENV"
        echo "install_name=spectacle-analyzer-${GITHUB_REF##*/}" >> "$GITHUB_ENV"
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up dependencies
      run: |
        sudo apt-get update && \
        sudo apt-get install \
          python-pip
        sudo pip install git-archive-all
    - name: Archive source code
      shell: bash
      run: |
        cd "$GITHUB_WORKSPACE" && \
        git-archive-all --prefix="${install_name}/" -9 "${{runner.workspace}}/${install_name}.tar.gz"
    - uses: actions/upload-artifact@v2
      with:
        name: Source code tarball
        path: ${{runner.workspace}}/${{env.install_name}}.tar.gz

  deploy:
    runs-on: ubuntu-18.04
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - build_for_win32
      - build_for_win64
    steps:
      - name: Set install name
        run: |
          echo "install_ref=${GITHUB_REF##*/}" >> "$GITHUB_ENV"
      - uses: actions/download-artifact@v2
        with:
          name: Windows 32-bit binaries
      - uses: actions/download-artifact@v2
        with:
          name: Windows 64-bit binaries
      - uses: actions/download-artifact@v2
        with:
          name: Source code tarball
      - name: Display file information
        shell: bash
        run: ls -lR
      ## Note: not using `actions/create-release@v1`
      ##       because it cannot update an existing release
      ##       see https://github.com/actions/create-release/issues/29
      - uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          tag_name: ${{env.install_ref}}
          name: Release ${{env.install_ref}}
          draft: false
          prerelease: false
          files: |
            spectacle-analyzer-${{env.install_ref}}-win32.zip
            spectacle-analyzer-${{env.install_ref}}-win64.zip
            spectacle-analyzer-${{env.install_ref}}.tar.gz
